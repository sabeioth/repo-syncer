name: Sync All Repos to Gitee

on:
  schedule:
    - cron: '0 3 * * *'  # 每天凌晨3点运行
  workflow_dispatch:  # 允许手动触发

jobs:
  sync-repos:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Sync repositories
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITEE_ACCESS_TOKEN: ${{ secrets.GITEE_ACCESS_TOKEN }}
          REPOS_TO_SYNC: ${{ secrets.REPOS_TO_SYNC }}
        run: |
          import json
          import os
          import subprocess

          repos_to_sync = json.loads(os.environ['REPOS_TO_SYNC'])

          for repo in repos_to_sync:
              github_repo = repo['github_repo']
              gitee_repo = repo['gitee_repo']

              print(f"Syncing {github_repo} to {gitee_repo}")

              # Clone the GitHub repository
              subprocess.run(['git', 'clone', f'https://github.com/{github_repo}.git'], check=True)

              repo_name = github_repo.split('/')[-1]
              os.chdir(repo_name)

              # Add Gitee as a remote
              subprocess.run(['git', 'remote', 'add', 'gitee', f'https://{os.environ["GITEE_ACCESS_TOKEN"]}:x-oauth-basic@gitee.com/{gitee_repo}.git'], check=True)

              # Fetch all branches and tags
              subprocess.run(['git', 'fetch', '--all'], check=True)

              # Push all branches and tags to Gitee
              subprocess.run(['git', 'push', 'gitee', '--all'], check=True)
              subprocess.run(['git', 'push', 'gitee', '--tags'], check=True)

              os.chdir('..')

              # Clean up the local repository
              subprocess.run(['rm', '-rf', repo_name], check=True)
